<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>flume-ng-sinks</artifactId>
    <groupId>org.apache.flume</groupId>
    <version>1.8.0</version>
  </parent>

  <groupId>org.apache.flume.flume-ng-sinks</groupId>
  <artifactId>flume-hdfs-sink</artifactId>
  <name>Flume NG HDFS Sink</name>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-sdk</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-configuration</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>${hadoop.common.artifact.id}</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

  </dependencies>

  <profiles>

    <profile>
      <id>hadoop-1.0</id>
      <activation>
        <property>
          <name>flume.hadoop.profile</name>
          <value>1</value>
        </property>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <scope>test</scope>
        </dependency>

        <!-- required because the hadoop-core pom is missing these deps
            and MiniDFSCluster pulls in the webhdfs classes -->
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
          <scope>test</scope>
        </dependency>

      </dependencies>
    </profile>

    <profile>
      <id>hadoop-2</id>
      <activation>
        <property>
          <name>flume.hadoop.profile</name>
          <value>2</value>
        </property>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <optional>true</optional>
        </dependency>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-auth</artifactId>
          <optional>true</optional>
        </dependency>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-minicluster</artifactId>
          <scope>test</scope>
        </dependency>

      </dependencies>
    </profile>

    <profile>
      <id>hbase-1</id>
      <activation>
        <property>
          <name>!flume.hadoop.profile</name>
        </property>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <optional>true</optional>
        </dependency>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-auth</artifactId>
          <optional>true</optional>
        </dependency>

        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-minicluster</artifactId>
          <scope>test</scope>
        </dependency>

      </dependencies>
    </profile>
  </profiles>

</project>



agent1.sources = logsource
agent1.channels = mc1
agent1.sinks = avro-sink
 
agent1.sources.logsource.channels = mc1
agent1.sinks.avro-sink.channel = mc1
 
#source
agent1.sources.logsource.type = org.apache.flume.source.kafka.KafkaSource
agent1.sources.logsource.zookeeperConnect = slave1:2181,slave2:2181,slave3:2181
agent1.sources.logsource.topic = test
agent1.sources.logsource.groupId = canal
agent1.sources.logsource.kafka.consumer.timeout.ms = 100
 
#channel1
agent1.channels.mc1.type = memory
agent1.channels.mc1.capacity = 1000
agent1.channels.mc1.keep-alive = 60
 
 
#sink1
agent1.sinks.avro-sink.type = file_roll
agent1.sinks.avro-sink.sink.directory = /data/mysink


../bin/flume-ng agent --conf ../conf/ -f flume_directHDFS.conf -n agent1 -Dflume.root.logger=INFO,console